plugins {
    id 'com.android.library'
    id "com.google.protobuf"
    id 'kotlin-android'
    id 'kotlinx-serialization'
    id 'kotlin-kapt'
}

apply from: "$rootDir/dependencies.gradle"
android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    api "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api "androidx.collection:collection-ktx:1.1.0"

    api "org.koin:koin-core:$versions.koin"
    api "org.koin:koin-android:$versions.koin"
    api "org.koin:koin-androidx-scope:$versions.koin"
    api "org.koin:koin-androidx-viewmodel:$versions.koin"
    api "org.koin:koin-androidx-fragment:$versions.koin"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutines"

    api "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"

    api platform('com.google.firebase:firebase-bom:25.11.0')
    api 'com.google.firebase:firebase-crashlytics-ktx'
    api 'com.google.firebase:firebase-analytics-ktx'
    api 'com.google.firebase:firebase-messaging-ktx'
    api 'com.google.firebase:firebase-dynamic-links-ktx'
    api 'com.google.firebase:firebase-storage-ktx'
    api 'com.google.firebase:firebase-database-ktx'
    api 'com.google.firebase:firebase-auth-ktx'
    api 'com.google.firebase:firebase-perf-ktx'

    api 'com.google.crypto.tink:tink-android:1.5.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'io.noties.markwon:core:4.6.2'

    api 'com.orhanobut:logger:2.2.0'
    api "androidx.datastore:datastore:$versions.dataStore"
    api "androidx.datastore:datastore-preferences:$versions.dataStore"
    api  "com.google.protobuf:protobuf-javalite:3.11.0"

    api "com.soywiz.korlibs.klock:klock-jvm:2.0.2"
    api 'org.greenrobot:eventbus:3.2.0'
    api 'com.blankj:utilcodex:1.30.5'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

kapt {
    correctErrorTypes true
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
apply from: "$rootDir/spotless.gradle"